apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unifi-protect.fullname" . }}
  labels:
    {{- include "unifi-protect.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "unifi-protect.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "unifi-protect.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
          {{- . | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: run
            mountPath: /run
          - name: tmp
            mountPath: /tmp
          - name: cgroup
            mountPath: /sys/fs/cgroup
          - name: storage
            mountPath: /storage/srv
            subPath: srv
          - name: storage
            mountPath: /storage/data
            subPath: data
          - name: storage
            mountPath: /storage/persistent
            subPath: persistent
          {{- with .Values.extraVolumes }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
      volumes:
      - name: run
        emptyDir:
          medium: Memory
      - name: tmp
        emptyDir: {}
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: storage
        {{ if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "unifi-protect.fullname" . }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- with .Values.extraVolumes }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
