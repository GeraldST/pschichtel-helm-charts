kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "coturn.fullname" . }}
data:
  base.conf: |-
    {{- if or .Values.coturn.staticSecret.secretName .Values.coturn.staticSecret.value }}
    use-auth-secret
    {{- else if or .Values.coturn.staticUsers.secretName .Values.coturn.staticUsers.users }}
    lt-cred-mech
    {{- else }}
    {{- fail "Either static users or a static secret is required!" }}
    {{- end }}
    realm={{ .Values.coturn.realm }}
    listening-port={{ .Values.coturn.ports.listening }}
    {{- with .Values.coturn.externalIp }}
    external-ip={{ . }}
    {{- end }}
    {{- if .Values.coturn.tls.secretName }}
    no-tlsv1
    no-tlsv1_1
    no-tlsv1_2
    tls-listening-port={{ .Values.coturn.ports.tlsListening }}
    pkey=/tls/tls.key
    cert=/tls/tls.crt
    {{- else }}
    no-tls
    no-dtls
    {{- end }}
    min-port={{ .Values.coturn.ports.relay.min }}
    max-port={{ .Values.coturn.ports.relay.max }}
    {{- if .Values.coturn.mobility }}
    mobility
    {{- end }}
    log-file=stdout
    pidfile=/tmp/turnserver.pid
    {{- if .Values.metrics.enabled }}
    prometheus
    {{- end }}
    {{- if .Values.coturn.cliPasswordHash }}
    cli-ip=127.0.0.1
    cli-port=5766
    cli-password={{ .Values.coturn.cliPasswordHash }}
    {{- else }}
    no-cli
    {{- end }}
    {{- if .Values.coturn.logging.verbose }}
    {{- if .Values.coturn.logging.veryVerbose }}
    Verbose
    {{- else }}
    verbose
    {{- end }}
    {{- if .Values.coturn.logging.logBinding }}
    log-binding
    {{- end }}
    {{- end }}
  {{- with .Values.coturn.extraConfig }}
  extra.conf: {{ tpl . $ | quote }}
  {{- end }}
  entrypoint.sh: {{ $.Files.Get "src/entrypoint.sh" | quote }}