satisfactoryOpts:
  autopause: true
  autosaveInterval: 300
  autosaveNum: 3
  autosaveOnDisconnect: true
  crashReport: true
  debug: false
  disableSeasonalEvents: false
  maxPlayers: 4
  pgid: 1000
  puid: 1000
  serverGamePort: 7777
  serverIP: "0.0.0.0"
  skipUpdate: false
  steamBeta: false

persistentVolumeClaim:
  enable: true
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 30Gi

image:
  repository: "wolveix/satisfactory-server"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env: []
envFrom: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "satisfactory-sa"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

# Ensure targetPort matches port config in satisfactoryOpts
service:
  type: LoadBalancer

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
