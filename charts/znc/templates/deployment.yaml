apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "znc.fullname" . }}
  labels:
    {{- include "znc.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "znc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "znc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range $name, $port := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ $port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.ingress.enabled }}
          {{- $_ := required "port 'web' is required for ingress!" .Values.service.ports.web }}
          livenessProbe:
            httpGet:
              path: /
              port: web
          readinessProbe:
            httpGet:
              path: /
              port: web
          {{- else }}
          # TODO not sure how to properly healthcheck
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: /znc-data
          {{- if .Values.ingress.enabled }}
          {{- range $cert := .Values.ingress.tls }}
          - name: cert-{{ $cert.secretName }}
            mountPath: /certs/{{ $cert.secretName }}
          {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "znc.fullname" . }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.ingress.enabled }}
      {{- range $cert := .Values.ingress.tls }}
      - name: cert-{{ $cert.secretName }}
        secret:
          secretName: {{ $cert.secretName }}
      {{- end }}
      {{- end }}
